#include <iostream>

using namespace std; 

void QS (int *arr, int left, int right) 
{  
    int x = arr[(left+right)/2]; //присваивание новой переменной элемента исходного массива, расположенного по середине 
    int i=left; 
    int j=right; 
    while (i<=j) //идем по массиву слева и справа, сравнивая каждый элемент с серединным
    { 
        while (arr[i]>x) //пока находящиеся слева элементы массива больше серединного элемента, мы движемся дальше по массиву, а этот элемент оставляем на месте  
        {
            i++;
        }
        while (arr[j]<x) //пока находящийся справа элемент массива меньшее серединного элемента, мы продолжаем двигаться по массиву, а этот элемент оставляем на месте   
        {
            j--;
        }
        if (i<=j) //найдя элемент слева, меньший серединного, и элемент справа, больший серединного, меняем их местами 
        { 
            int temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp; 
            i++; 
            j--; 
        } 
    } 
    if (i<right) //продолжаем делить массив и сортироваь его до тех пор, пока не дойдем до конца массива 
    {
        QS (arr, i, right); 
    }
    if (left<j) //продолжаем делить массив и сортироваь его до тех пор, пока не дойдем до конца массива
    {
        QS (arr, left, j); 
    } 
}

void incredible_sort (int *arr, int N, int k)
{
    cin>>N; 
    cin>>k;
    for (int i=0; i<N; i++) //заполнение массива числами с клавиатуры
    {
        cin>>arr[i];
    }
    QS (arr, 0, N-1); //сортировка массива arr
    for (int i = 0; i < N; i++) //вывод отсортированного массива на экран
    {
        cout<<arr[i]<<" ";
    }
}
    
int main() 
{ 
    int N, k;
    int *arr = new int[N];
    incredible_sort (arr, N, k);
    return 0; 
}
