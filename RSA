#include <iostream>
#include <cmath>
#include <cstdlib>
#include <math.h>

using namespace std;

bool is_prime (int a) {
    if (a==0) {
        return false;
    }
    if (a==1) {
        return false;
    }
    for (int i=2; i<sqrt(a); i++) {
        if (a%i==0) {
            return false;
        }
    }
    return true;
}
long int GCD (long int a, long int b) {
    if (a==0) {
        return b;
    }
    if (b==0) {
        return a;
    }
    return GCD (b, a%b);
}
long int binpow (int n, long int m) {
    if (m==0) {
        return 1;
    }
    if (m%2==0) {
        long int a=binpow(n,m/2);
        return a*a;
    }
    else {
        return binpow (n,m-1)*n;
    }
}
void RSA(long int m) {
    int p=5; //encryption
    int q=7;
    while (is_prime(p)!=1 && is_prime(q)!=1) {
        p=rand()%1000;
        q=rand()%1000;
    }
    long int n=p*q;
    long int f=(p-1)*(q-1);
    long int e;
    do {
        e=1+rand()%f;
    } while(GCD(e, f)!=1);
    cout<<p<<";"<<q<<endl;
    cout<<e<<";"<<n<<";"<<f<<endl;
    long int c;
    c=pow(m, e);
    c%=n;
    cout<<c<<endl; //encrypted message
    long int d; //transcript
    do {
        d=1+rand()%f;
    } while((d*e)%f!=1);
    cout<<d<<";"<<n<<endl;
    m=pow(c, d);
    m%=n;
    cout<<m; //original message
}

int main () {
    long int m;
    cin>>m;
    RSA(m);
    return 0;
}
